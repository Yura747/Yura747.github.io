{"version":3,"sources":["logo.svg","components/Product/Product.js","pages/Home/Home.js","components/Search/Search.js","components/Header/Header.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Product","props","state","ProductData","isLoading","URL","fetch","then","response","ok","json","Error","data","setState","catch","error","this","GetProduct","message","src","logo","className","alt","moreProducts","data-testid","image","onClick","icon","faArrowsAlt","title","currency","price","sizes","map","size","index","key","colors","color","style","backgroundColor","descriptionTitle","description","descriptionList","item","images","product","to","link","smallImage","React","Component","Home","Search","name","placeholder","faSearch","listItems","menuItem","Header","Footer","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.46ca44bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './Product.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../logo.svg';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowsAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction LoadItems($this) {\r\n    $this.GetProduct('./data/product-2.json');\r\n}\r\nclass Product extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ProductData: [],\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  async GetProduct(URL) {\r\n    await fetch(URL)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Something went wrong ...');\r\n        }\r\n      })\r\n      .then(data => this.setState({ ProductData: data, isLoading: false }))\r\n      .catch(error => {\r\n        this.setState({ error, isLoading: false })\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetProduct('./data/product-1.json');\r\n  }\r\n\r\n  render() {\r\n    const { ProductData, isLoading, error } = this.state;\r\n\r\n    if (error) {\r\n      return <p>{error.message}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n      return <img src={logo} className=\"App-logo\" alt=\"logo\" />;\r\n    }\r\n\r\n    if(ProductData && ProductData.data && ProductData.moreProducts) {\r\n      return (\r\n        <div className=\"m-product\" data-testid=\"Product\">\r\n          <div className=\"m-product__image-container\">\r\n              <img\r\n                  className=\"m-product__image\"\r\n                  src={ProductData.data.image}\r\n                  alt={ProductData.data.alt} onClick={() => LoadItems(this)}/>\r\n              <button className=\"m-product__preview-btn\">\r\n                <FontAwesomeIcon icon={faArrowsAlt} className=\"m-product__preview-btn-icon\"/>\r\n              </button>\r\n          </div>\r\n          <div className=\"m-product__info\">\r\n              <h3 className=\"m-product__title\">\r\n                {ProductData.data.title}\r\n              </h3>\r\n              <p className=\"m-product__price-container\">\r\n                <span className=\"m-product__currency\">\r\n                  {ProductData.data.currency}\r\n                </span>\r\n                <span className=\"m-product__price\">\r\n                  {ProductData.data.price}\r\n                </span>\r\n              </p>\r\n              <p className=\"m-product__sizes\">\r\n                available sizes:\r\n                {ProductData.data.sizes.map((size, index) =>\r\n                  <span key={index} className=\"m-product__size\">\r\n                    {size}\r\n                  </span>\r\n                )}\r\n              </p>\r\n              <div className=\"m-product__colors-container\">\r\n                  <p className=\"m-product__colors-label\">Colors</p>\r\n                  <div className=\"m-product__colors\">\r\n                    {ProductData.data.colors.map((color, index) =>\r\n                      <button\r\n                        key={index}\r\n                        className=\"m-product__color\"\r\n                        style={{backgroundColor: color}}>\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"m-product__color-bg\"></div>\r\n              </div>\r\n          </div>\r\n          <div className=\"m-product__description-container\">\r\n            <p className=\"m-product__description-title\">{ProductData.data.descriptionTitle}</p>\r\n            <p className=\"m-product__description\">\r\n              {ProductData.data.description}\r\n            </p>\r\n            <ul className=\"m-product__description-list\">\r\n              {ProductData.data.descriptionList.map((item, index) =>\r\n                  <li key={index} className=\"m-product__description-list-item\">\r\n                      {item}\r\n                  </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"m-product__more-products\">\r\n              <p className=\"m-product__description-title\">\r\n                {ProductData.moreProducts.title}\r\n              </p>\r\n              <div className=\"m-product__more-products-images\">\r\n                  {ProductData.moreProducts.images.map((product, index) =>\r\n                      <Link to={product.link} key={index} className=\"m-product__more-products-link\">\r\n                          <img\r\n                              className=\"m-product__more-products-image\"\r\n                              src={product.smallImage} alt={product.alt}/>\r\n                      </Link>\r\n                  )}\r\n              </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <h1>There is no products yet</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport './Home.scss';\r\nimport Product from '../../components/Product/Product';\r\n\r\nconst Home = () => (\r\n  <div className=\"Home\" data-testid=\"Home\">\r\n    <div className=\"layout\">\r\n        <Product />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Search.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Search = () => (\r\n  <div className=\"c-search__container\" data-testid=\"Search\">\r\n      <form>\r\n        <div className=\"c-search__inner\">\r\n            <input className=\"c-search__input\" name=\"search\" placeholder=\"search\" />\r\n            <button className=\"c-search__btn\">\r\n              <FontAwesomeIcon icon={faSearch} className=\"c-search__btn-icon\"/>\r\n            </button>\r\n        </div>\r\n      </form>\r\n  </div>\r\n);\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport Search from '../Search/Search';\r\n\r\nconst menuItems= ['men', 'women', 'kids', 'ftw', 'accessories'];\r\n\r\nconst listItems = menuItems.map((menuItem, index) =>\r\n  <li key={index} className=\"l-header__menu-item\">\r\n    <Link to='/' className=\"l-header__menu-link\">\r\n      {menuItem}\r\n    </Link>\r\n  </li>\r\n);\r\n\r\nconst Header = () => (\r\n  <header className=\"Header\" data-testid=\"Header\">\r\n    <div className=\"layout\">\r\n      <div className=\"l-header__container\">\r\n        <Link to='/' className=\"l-header__logo\">\r\n          <h1>Logo</h1>\r\n        </Link>\r\n        <nav>\r\n          <ul className=\"l-header__menu\">\r\n              {listItems}\r\n          </ul>\r\n        </nav>\r\n\r\n        <Search />\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => (\r\n  <div className=\"Footer\" data-testid=\"Footer\">\r\n    <div className=\"layout\">\r\n\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './main.scss';\r\n\r\nimport Home from './pages/Home/Home';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n            <Header />\r\n                <Switch>\r\n                    <Route path='/' exact component = { Home } />\r\n                </Switch>\r\n            <Footer />\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}