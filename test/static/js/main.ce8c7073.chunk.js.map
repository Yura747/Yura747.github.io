{"version":3,"sources":["logo.svg","components/Home/Home.js","components/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","width","height","xmlns","fillRule","d","Component","Search","props","openSearch","e","setState","displayInfo","state","searchDisable","formDisable","submitHandler","preventDefault","firstRequest","target","name","value","dataObj","reposURL","reposInfo","loaderActive","messageActive","this","url","axios","get","data","user","loaderActivate","URL","GET","result","loaderDisable","Object","assign","repos_url","getRepos","console","log","length","src","avatar_url","alt","viewBox","version","aria-hidden","href","html_url","rel","map","repo","key","title","language","onClick","onSubmit","type","placeholder","logo","App","currentPage","_pageScroller","ref","c","reactPageScroller","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,6PCyB5BC,G,+LApBX,OACE,6BAASC,UAAU,QACjB,yBAAKA,UAAU,SACb,sCACA,kCAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBAAkBC,MAAM,IAAIC,OAAO,KAAKC,MAAM,8BAC3D,uBAAGC,SAAS,WACV,0BAAMJ,UAAU,SAASK,EAAE,sBAC3B,0BAAML,UAAU,SAAUK,EAAE,qBAC5B,0BAAML,UAAU,SAAUK,EAAE,4B,GAbvBC,c,6DCkIJC,G,mBA/Hb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAkBRC,WAAa,SAAAC,GACX,EAAKC,SAAS,CACZC,aAAc,EAAKC,MAAMD,YACzBE,eAAgB,EAAKD,MAAMC,cAC3BC,aAAc,EAAKF,MAAME,eAvBX,EAqDlBC,cAAgB,SAAAN,GACdA,EAAEO,iBACF,EAAKN,SAAS,CAAEG,eAAe,IAC/B,EAAKI,aAAaR,EAAES,OAAOC,KAAKC,QAtDhC,EAAKR,MAAQ,CACXS,QAAS,GACTC,SAAU,GACVC,UAAW,GACXC,cAAc,EACdb,aAAa,EACbE,eAAe,EACfY,eAAe,EACfX,aAAa,GAVC,E,8EAchBY,KAAKhB,SAAS,CAAEc,cAAc,M,sCAG9BE,KAAKhB,SAAS,CAAEc,cAAc,M,kEAStBG,G,sFACSC,IAAMC,IAAIF,G,cAAvBG,E,yBACGA,G,2KAEUC,G,+EACjBL,KAAKM,iBAGCC,E,uCAFQF,GAAQ,W,SAGDL,KAAKQ,IAAID,G,QAAxBE,E,UAEJT,KAAKU,gBACLV,KAAKhB,SAAS,CAAEW,QAASgB,OAAOC,OAAO,GAAIH,EAAOL,QAClDJ,KAAKhB,SAAS,CAAEY,SAAUa,EAAOL,KAAKS,UACpC5B,aAAa,EACbG,aAAa,IAEfY,KAAKc,Y,6PAIDP,EAAMP,KAAKd,MAAMU,S,SACFI,KAAKQ,IAAID,G,QAAxBE,E,SAEJT,KAAKhB,SAAS,CAAEa,UAAWY,EAAOL,O,mIASpCW,QAAQC,IAAIhB,KAAKd,MAAMW,WACvB,IAAMO,EAAOJ,KAAKd,MAAMS,QACxB,OACE,6BAAStB,UAAU,UACkB,IAAhC2B,KAAKd,MAAMW,UAAUoB,OACtB,yBAAK5C,UAAS,qBAAgB2B,KAAKd,MAAMD,YAAc,SAAW,KAChE,yBAAKZ,UAAU,iBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACf,yBAAK6C,IAAKd,EAAKe,WAAY9C,UAAU,SAAS+C,IAAI,SAClD,yBAAK/C,UAAU,SACb,yBAAKgD,QAAQ,YAAYC,QAAQ,MAAMhD,MAAM,KAAKC,OAAO,KAAKgD,cAAY,QAAO,0BAAM9C,SAAS,UAAUC,EAAE,8wBAG9G,yBAAKL,UAAU,WACb,2BAAI+B,EAAKX,MACT,uBAAGpB,UAAU,OAAOmD,KAAMpB,EAAKqB,SAAUjC,OAAO,SAASkC,IAAI,uBAA7D,mBAGJ,yBAAKrD,UAAU,aACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,eAAb,aAEF,yBAAKA,UAAU,iBACb,+CACA,yBAAKA,UAAU,WACZ2B,KAAKd,MAAMW,UAAU8B,IAAI,SAAAC,GAAI,OAC5B,yBAAKvD,UAAU,OAAOwD,IAAKD,EAAKnC,MAC9B,uBAAGpB,UAAU,YAAYmD,KAAMI,EAAKH,SAAUjC,OAAO,SAASkC,IAAI,uBAChE,0BAAMI,MAAOF,EAAKnC,MAAOmC,EAAKnC,OAEhC,yBAAKpB,UAAU,wBACb,0BAAMA,UAAU,WAChB,0BAAMA,UAAU,YAAYuD,EAAKG,kBAQ/C,4BAAQ1D,UAAU,kBAAkB2D,QAAUhC,KAAKlB,YAAnD,SAEA,yBAAKT,UAAS,kBAAa2B,KAAKd,MAAMa,cAAgB,SAAW,KAC/D,yGAKF,yBAAK1B,UAAS,eAAU2B,KAAKd,MAAME,YAAc,SAAW,KAC1D,yBAAKf,UAAS,uBAAkB2B,KAAKd,MAAMC,cAAgB,SAAW,KACpE,0BAAM8C,SAAWjC,KAAKX,eACpB,yBAAKhB,UAAU,eACb,2BAAO6D,KAAK,OAAO7D,UAAU,YAAYoB,KAAK,OAAO0C,YAAY,oBACjE,4BAAQ9D,UAAU,cAAlB,YAGJ,uBAAGA,UAAU,WAAb,qBAEJ,yBAAKA,UAAS,oBAAe2B,KAAKd,MAAMY,aAAe,SAAW,KAChE,yBAAKoB,IAAKkB,IAAM/D,UAAU,SAAS+C,IAAI,gB,GAxHhCzC,c,SCyBN0D,E,YArBb,WAAYxD,GAAQ,IAAD,8BACjB,4CAAMA,KACDK,MAAQ,CACXoD,YAAa,GAEf,EAAKC,cAAgB,KALJ,E,sEAQT,IAAD,OACP,OACE,yBAAKlE,UAAU,OACb,kBAAC,IAAD,CAAmBmE,IAAK,SAAAC,GAAC,OAAI,EAAKC,kBAAoBD,IACpD,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAdQ9D,aCIEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ce8c7073.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"/static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n  render() {\n    return (\n      <section className=\"Home\">\n        <div className=\"title\">\n          <h2>Search</h2>\n          <p>on</p>\n        </div>\n        <div className=\"scroll-down-wr\">\n          <svg className=\"scroll-down-svg\" width=\"9\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g fillRule=\"evenodd\">\n              <path className=\"path_1\" d=\"M4.614 25L0 18h9z\"/>\n              <path className=\"path_2\"  d=\"M4.614 16L0 9h9z\"/>\n              <path className=\"path_3\"  d=\"M4.614 7L0 0h9z\"/>\n            </g>\n          </svg>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport logo from '../../logo.svg'; \nimport axios from 'axios';\nimport './Search.css';\n\nclass Search extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      dataObj: {},\n      reposURL: '',\n      reposInfo: [],\n      loaderActive: false,\n      displayInfo: true,\n      searchDisable: false,\n      messageActive: false,\n      formDisable: false,\n    };\n  }\n  loaderActivate() {\n    this.setState({ loaderActive: true });\n  }\n  loaderDisable() {\n    this.setState({ loaderActive: false });\n  }\n  openSearch = e => { \n    this.setState({\n      displayInfo: !this.state.displayInfo,\n      searchDisable: !this.state.searchDisable, \n      formDisable: !this.state.formDisable,\n    });\n  }\n  async GET(url) {\n    let data = await axios.get(url)\n    return data;\n  }\n  async firstRequest(user) {\n    this.loaderActivate();\n    const value = user || 'Yura747';\n    // const TOKEN = 'cd43ddf8f979374f0e002b3503acf8db1895d817';\n    const URL = `https://api.github.com/users/${value}`;\n    const result = await this.GET(URL);\n    if(result) {\n      this.loaderDisable();  \n      this.setState({ dataObj: Object.assign({}, result.data) });\n      this.setState({ reposURL: result.data.repos_url,\n        displayInfo: true,\n        formDisable: true,\n      });\n      this.getRepos();\n    }\n  }\n  async getRepos() {\n    const URL = this.state.reposURL;\n    const result = await this.GET(URL);\n    if(result) {\n      this.setState({ reposInfo: result.data });\n    }\n  }\n  submitHandler = e => {\n    e.preventDefault();\n    this.setState({ searchDisable: true });\n    this.firstRequest(e.target.name.value);\n  }\n  render() {\n    console.log(this.state.reposInfo);\n    const data = this.state.dataObj;\n    return (\n      <section className=\"Search\">\n        { (this.state.reposInfo.length !== 0) ? (\n          <div className={`content-wr ${this.state.displayInfo ? 'active' : '' }`}>\n            <div className=\"content-inner\">\n              <div className=\"card-wr\">\n                <div className=\"avatar-wr\">\n                <img src={data.avatar_url} className=\"avatar\" alt=\"logo\" />\n                <div className=\"smile\">\n                  <svg viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.81 12.81a6.72 6.72 0 0 1-2.17 1.45c-.83.36-1.72.53-2.64.53-.92 0-1.81-.17-2.64-.53-.81-.34-1.55-.83-2.17-1.45a6.773 6.773 0 0 1-1.45-2.17A6.59 6.59 0 0 1 1.21 8c0-.92.17-1.81.53-2.64.34-.81.83-1.55 1.45-2.17.62-.62 1.36-1.11 2.17-1.45A6.59 6.59 0 0 1 8 1.21c.92 0 1.81.17 2.64.53.81.34 1.55.83 2.17 1.45.62.62 1.11 1.36 1.45 2.17.36.83.53 1.72.53 2.64 0 .92-.17 1.81-.53 2.64-.34.81-.83 1.55-1.45 2.17zM4 6.8v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2H5.2C4.53 8 4 7.47 4 6.8zm5 0v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2h-.59C9.53 8 9 7.47 9 6.8zm4 3.2c-.72 1.88-2.91 3-5 3s-4.28-1.13-5-3c-.14-.39.23-1 .66-1h8.59c.41 0 .89.61.75 1z\"></path></svg>\n                </div>\n                </div>\n                <div className=\"info-wr\">\n                  <p>{data.name}</p>\n                  <a className=\"link\" href={data.html_url} target=\"_blank\" rel=\"noopener noreferrer\">Visit profile</a>\n                </div>\n              </div>\n              <div className=\"main-info\">\n                <div className=\"info__header\">\n                  <p className=\"info__title\">Overview</p>\n                </div>\n                <div className=\"info__content\">\n                  <p>All repositories</p>\n                  <div className=\"repo-wr\">\n                    {this.state.reposInfo.map(repo => \n                      <div className=\"repo\" key={repo.name}>\n                        <a className=\"repo-link\" href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          <span title={repo.name}>{repo.name}</span>\n                        </a>\n                        <div className=\"programming-language\">\n                          <span className=\"circle\"></span>\n                          <span className=\"language\">{repo.language}</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button className=\"search-btn back\" onClick={ this.openSearch }>Back</button> \n          </div>): (\n            <div className={`message ${this.state.messageActive ? 'active' : '' }`}>\n              <p>Something wrong with your request. \n                  Please, reload this page and try again\n                </p>\n            </div>\n          )}\n            <div className={`form ${this.state.formDisable ? 'active' : '' }`}>\n              <div className={`form-content ${this.state.searchDisable ? 'active' : '' }`}>\n                <form onSubmit={ this.submitHandler }>\n                  <div className=\"form__inner\">\n                    <input type=\"text\" className=\"inputName\" name=\"name\" placeholder=\"repository name\"></input>\n                    <button className=\"search-btn\">Search</button> \n                  </div>\n                </form>\n                <p className=\"example\">example: Yura747</p>\n              </div>\n            <div className={`Loader-wr ${this.state.loaderActive ? 'active' : '' }`}>\n              <img src={logo} className=\"Loader\" alt=\"logo\" />\n            </div>\n          </div>\n      </section>\n    );\n  }\n}\n\nexport default Search;","// import React from 'react';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport ReactPageScroller from \"react-page-scroller\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1\n    };\n    this._pageScroller = null;\n  }\n\n  render (){\n    return (\n      <div className=\"App\">\n        <ReactPageScroller ref={c => this.reactPageScroller = c}>\n          <Home />\n          <Search />\n        </ReactPageScroller>\n      </div>\n    );\n  };\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}